{"version":3,"sources":["App.js","index.js"],"names":["goodsFromServer","App","state","selectedGoods","selectElement","good","goods","setState","removeElement","includes","newGoods","filter","somegood","resetGoods","selected","this","select","remove","reset","className","join","type","classNames","hidden","length","onClick","map","key","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sPAIMA,G,MAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,WA+EaC,E,4MA3EbC,MAAQ,CACNC,cAAe,I,EAGjBC,cAAgB,SAACC,GACf,IAAMC,EAAQ,EAAKJ,MAAMC,cAEzB,EAAKI,SAAS,CAAEJ,cAAc,GAAD,mBAAMG,GAAN,CAAaD,O,EAG5CG,cAAgB,SAACH,GACf,IAAMC,EAAQ,EAAKJ,MAAMC,cAEzB,GAAIG,EAAMG,SAASJ,GAAO,CACxB,IAAMK,EAAWJ,EAAMK,QAAO,SAAAC,GAAQ,OAAIA,IAAaP,KAEvD,EAAKE,SAAS,CAAEJ,cAAc,YAAKO,O,EAIvCG,WAAa,WACX,EAAKN,SAAS,CAAEJ,cAAe,M,uDAI/B,IAAMW,EAAWC,KAAKb,MAAMC,cACtBa,EAASD,KAAKX,cACda,EAASF,KAAKP,cACdU,EAAQH,KAAKF,WAEnB,OACE,yBAAKM,UAAU,OACb,wBAAIA,UAAU,uBAAd,mBAEGL,EAASM,KAAK,OAEjB,4BACEC,KAAK,SACLF,UACEG,IAAW,CAAEC,OAA4B,IAApBT,EAASU,SAEhCC,QAASP,GALX,KASA,4BACGlB,EAAgB0B,KAAI,SAAArB,GAAI,OACvB,wBAAIsB,IAAKtB,GACP,0BAAMc,UACJG,IAAW,CAAER,SAAUA,EAASL,SAASJ,MAGxCA,GALL,SAQE,4BACEgB,KAAK,SACLI,QAAS,kBAAOX,EAASL,SAASJ,GAC9BY,EAAOZ,GACPW,EAAOX,KAGVS,EAASL,SAASJ,GAAQ,SAAW,YA/BhD,mBAqCG,IACAL,EAAgBwB,Y,GAtEPI,IAAMC,WCbxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.02b3c4b2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    selectedGoods: [],\n  };\n\n  selectElement = (good) => {\n    const goods = this.state.selectedGoods;\n\n    this.setState({ selectedGoods: [...goods, good] });\n  }\n\n  removeElement = (good) => {\n    const goods = this.state.selectedGoods;\n\n    if (goods.includes(good)) {\n      const newGoods = goods.filter(somegood => somegood !== good);\n\n      this.setState({ selectedGoods: [...newGoods] });\n    }\n  }\n\n  resetGoods = () => {\n    this.setState({ selectedGoods: [] });\n  }\n\n  render() {\n    const selected = this.state.selectedGoods;\n    const select = this.selectElement;\n    const remove = this.removeElement;\n    const reset = this.resetGoods;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__goods-selected\">\n          Selected good: -\n          {selected.join(', ')}\n        </h1>\n        <button\n          type=\"button\"\n          className={\n            classNames({ hidden: selected.length === 0 })\n          }\n          onClick={reset}\n        >\n          X\n        </button>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li key={good}>\n              <span className={\n                classNames({ selected: selected.includes(good) })\n              }\n              >\n                {good}\n              </span>\n                &emsp;\n              <button\n                type=\"button\"\n                onClick={() => (selected.includes(good)\n                  ? remove(good)\n                  : select(good))\n                }\n              >\n                {selected.includes(good) ? 'Remove' : 'Add'}\n              </button>\n            </li>\n          ))}\n        </ul>\n        Amount of goods:\n        {' '}\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}